usage: gocdpb.py [-h]
                 [-j JSON_SETTINGS | -y YAML_SETTINGS | --rename-pipeline-group RENAME_PIPELINE_GROUP | --move-all-pipelines-in-group MOVE_ALL_PIPELINES_IN_GROUP]
                 [-p PLUGIN] [-D DEFINE] [--dump-test-config DUMP_TEST_CONFIG]
                 [-d DUMP] [-v] [-c CONFIG] [-C CONFIG_PARAM]
                 [-P PASSWORD_PROMPT] [--set-test-config SET_TEST_CONFIG]

Add pipeline to Go CD server.

optional arguments:
  -h, --help            show this help message and exit
  -j JSON_SETTINGS, --json-settings JSON_SETTINGS
                        Read json file / url with settings for GoCD pipeline.
  -y YAML_SETTINGS, --yaml-settings YAML_SETTINGS
                        Read yaml files with parameters for GoCD pipeline.
  --rename-pipeline-group RENAME_PIPELINE_GROUP
                        :old-group-name:new-group-name (put separator as first
                        char)
  --move-all-pipelines-in-group MOVE_ALL_PIPELINES_IN_GROUP
                        :source-group-name:target-group-name (put separator as
                        first char)
  -p PLUGIN, --plugin PLUGIN
                        Plugin module for custom functions.
  -D DEFINE, --define DEFINE
                        Define setting parameter on command line.
  --dump-test-config DUMP_TEST_CONFIG
                        Copy of some sections of new GoCD configuration XML
                        file.
  -d DUMP, --dump DUMP  Copy of new GoCD configuration XML file.
  -v, --verbose         Write status of created pipeline.
  -c CONFIG, --config CONFIG
                        Yaml file with configuration.
  -C CONFIG_PARAM, --config-param CONFIG_PARAM
                        Define config parameter on command line.
  -P PASSWORD_PROMPT, --password-prompt PASSWORD_PROMPT
                        Prompt for config parameter without echo.
  --set-test-config SET_TEST_CONFIG
                        Set some sections in config first. (For test setup.)
